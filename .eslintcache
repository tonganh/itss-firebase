[{"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\index.js":"1","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\App.js":"2","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\reportWebVitals.js":"3","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Todo.js":"4","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\TodoItem.js":"5","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Input.js":"6","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Filter.js":"7","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\hooks\\storage.js":"8","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\lib\\util.js":"9","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\lib\\firebase.js":"10","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Upload.js":"11"},{"size":517,"mtime":1656043717167,"results":"12","hashOfConfig":"13"},{"size":2488,"mtime":1656206297778,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1656043717168,"results":"15","hashOfConfig":"13"},{"size":1951,"mtime":1656053462217,"results":"16","hashOfConfig":"13"},{"size":407,"mtime":1656043717165,"results":"17","hashOfConfig":"13"},{"size":602,"mtime":1656043717165,"results":"18","hashOfConfig":"13"},{"size":694,"mtime":1656043717165,"results":"19","hashOfConfig":"13"},{"size":1374,"mtime":1656053462218,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1656043717167,"results":"21","hashOfConfig":"13"},{"size":2856,"mtime":1656206224653,"results":"22","hashOfConfig":"13"},{"size":1923,"mtime":1656206531801,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1y2uoon",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\index.js",[],["53","54"],"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\App.js",["55"],"import firebase from 'firebase/compat/app';\r\nimport React, { useEffect, useState } from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport Todo from './components/Todo';\r\nimport Upload from './components/Upload'\r\nimport './styles/main.css';\r\nimport { saveUserInformation, updateUserInformation } from './lib/firebase'\r\n/* スタイルシート */\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDE0ZRKjIjWUn9JfCcT-WGjOYJEgFpINXM\",\r\n  authDomain: \"itss-training-firebase.firebaseapp.com\",\r\n  projectId: \"itss-training-firebase\",\r\n  storageBucket: \"itss-training-firebase.appspot.com\",\r\n  messagingSenderId: \"355192140055\",\r\n  appId: \"1:355192140055:web:a860f5dbec305f68e9c752\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: 'popup',\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n  ],\r\n  callbacks: {\r\n    // Avoid redirects after sign-in.\r\n    signInSuccessWithAuthResult: () => false,\r\n  },\r\n};\r\n\r\n/* コンポーネント */\r\n\r\nfunction App() {\r\n\r\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\r\n  const [userAfterLogin, setUserAfterLogin] = useState(null)\r\n\r\n  // Listen to the Firebase Auth state and set the local state.\r\n  useEffect(() => {\r\n    const unregisterAuthObserver = firebase.auth().onAuthStateChanged(async (user) => {\r\n      const dataUserAfterLogin = await saveUserInformation(user)\r\n      setUserAfterLogin(dataUserAfterLogin)\r\n      setIsSignedIn(!!dataUserAfterLogin);\r\n    });\r\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\r\n  }, []);\r\n\r\n  const handleImageChanged = async imgUrl => {\r\n    await updateUserInformation(userAfterLogin, imgUrl);\r\n  }\r\n\r\n\r\n  if (!isSignedIn) {\r\n    return (\r\n      <div>\r\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container is-fluid\">\r\n\r\n      <p>{firebase.auth().currentUser.displayName}</p>\r\n      <div class=\"navbar-item\">\r\n        <Upload userImage={userAfterLogin.image} onSelectedImage={handleImageChanged} userAfterLogin={userAfterLogin} />\r\n        {userAfterLogin.name}\r\n      </div>\r\n\r\n      <a onClick={() => firebase.auth().signOut()}>Logout</a>\r\n      <Todo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\reportWebVitals.js",[],"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Todo.js",["56","57"],"import React, { useState } from 'react';\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\n\r\n/* ライブラリ */\r\nimport { getKey } from \"../lib/util\";\r\n\r\nfunction Todo() {\r\n  const [items, putItems, clearItems, updateItem] = useStorage();\r\n\r\n  const [filter, setFilter] = React.useState('ALL');\r\n\r\n  const displayItems = items.filter(item => {\r\n    if (filter === 'ALL') return true;\r\n    if (filter === 'TODO') return !item.done;\r\n    if (filter === 'DONE') return item.done;\r\n  });\r\n\r\n  const handleCheck = async (checked) => {\r\n    await updateItem(checked)\r\n  };\r\n\r\n  // const handleAdd = text => {\r\n  //   putItems([...items, { key: getKey(), text, done: false }]);\r\n  // };\r\n\r\n  const handleAdd = async (text) => {\r\n    await putItems({ key: getKey(), text, done: false });\r\n  };\r\n\r\n  const handleFilterChange = value => setFilter(value);\r\n\r\n  return (\r\n    <article class=\"panel is-danger\">\r\n      <div className=\"panel-heading\">\r\n        <span class=\"icon-text\">\r\n          <span class=\"icon\">\r\n            <i class=\"fas fa-calendar-check\"></i>\r\n          </span>\r\n          <span> ITSS Todoアプリ</span>\r\n        </span>\r\n      </div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter\r\n        onChange={handleFilterChange}\r\n        value={filter}\r\n      />\r\n      {displayItems.map(item => (\r\n        <TodoItem\r\n          key={item.key}\r\n          item={item}\r\n          onCheck={handleCheck}\r\n        />\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {displayItems.length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={async () => {\r\n          await clearItems()\r\n        }}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Todo;","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\TodoItem.js",[],"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Input.js",["58"],"import React, { useState } from 'react';\r\n\r\nfunction Input( { onAdd } ) {\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleChange = e => setText(e.target.value);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.keyCode === 13) {\r\n      onAdd(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input\r\n        class=\"input\"\r\n        type=\"text\"\r\n        placeholder=\"Todoを入力してください\"\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Filter.js",["59","60","61"],"function Filter({ value, onChange }) {\r\n\r\n  const handleClick = (key, e) => {\r\n    e.preventDefault();\r\n    onChange(key);\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'ALL')}\r\n        className={value === 'ALL' ?  'is-active' : ''}\r\n      >全て</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'TODO')}\r\n        className={value === 'TODO' ?  'is-active' : ''}\r\n      >未完了</a>\r\n      <a\r\n        href=\"#\"\r\n        onClick={handleClick.bind(null, 'DONE')}\r\n        className={value === 'DONE' ?  'is-active' : ''}\r\n      >完了済み</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\hooks\\storage.js",[],["62","63"],"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\lib\\util.js",[],"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\lib\\firebase.js",[],"C:\\Users\\20184040\\code\\study\\itnihongo\\itss_std_react_todo_k63_full\\src\\components\\Upload.js",["64"],"import React, { useState } from 'react'\r\n\r\n/* ライブラリ */\r\nimport { uploadImage } from \"../lib/firebase\";\r\n\r\nfunction Upload({ userImage, onSelectedImage, userAfterLogin }) {\r\n  const [isModal, setIsModal] = useState(false);\r\n  const active = isModal ? \"is-active\" : \"\";\r\n  const [imageUrl, setImageUrl] = useState(userImage);\r\n\r\n  const handleImage = async event => {\r\n    const image = event.target.files[0];\r\n    const imageUrl = await uploadImage(image, userAfterLogin);\r\n    onSelectedImage(imageUrl);\r\n    setImageUrl(imageUrl);\r\n    setIsModal(\"\")\r\n  };\r\n\r\n  const handleClick = () => {\r\n    console.log(\"🚀 ~ file: Upload.js ~ line 20 ~ handleClick ~ isModal\", isModal)\r\n    setIsModal(!isModal);\r\n  };\r\n\r\n  const ImageViewer = () => {\r\n    if (!imageUrl) {\r\n      return <i class=\"fas fa-user\"></i>\r\n    } else {\r\n      return (\r\n        <div>\r\n          <img src={imageUrl} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={`modal ${active}`}>\r\n        <div class=\"modal-background\"></div>\r\n        <div class=\"modal-content\">\r\n          <div class=\"file is-boxed\" >\r\n            <label class=\"file-label\">\r\n              <input class=\"file-input\" type=\"file\" name=\"resume\" onChange={handleImage} />\r\n              <span class=\"file-cta\">\r\n                <span class=\"file-icon\">\r\n                  <i class=\"fas fa-upload\"></i>\r\n                </span>\r\n                <span class=\"file-label\">画像を選択してください</span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <button class=\"modal-close is-large\" aria-label=\"close\" onClick={handleClick}></button>\r\n        </div>\r\n      </div>\r\n      <button onClick={handleClick} class=\"button is-primary is-inverted\">\r\n        <span class=\"icon\">\r\n          <ImageViewer />\r\n        </span>\r\n      </button>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Upload\r\n\r\n\r\n\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":73,"column":7,"nodeType":"71","endLine":73,"endColumn":52},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":19,"column":42,"nodeType":"78","messageId":"79","endLine":19,"endColumn":44},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"80","line":10,"column":7,"nodeType":"71","endLine":14,"endColumn":8},{"ruleId":"69","severity":1,"message":"80","line":15,"column":7,"nodeType":"71","endLine":19,"endColumn":8},{"ruleId":"69","severity":1,"message":"80","line":20,"column":7,"nodeType":"71","endLine":24,"endColumn":8},{"ruleId":"65","replacedBy":"81"},{"ruleId":"67","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":30,"column":11,"nodeType":"71","endLine":30,"endColumn":33},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["85"],["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]